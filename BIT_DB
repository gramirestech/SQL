#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

SELECT * FROM customers LIMIT 3;
SELECT * FROM jansales LIMIT 3;

/**How many orders were placed in January?**/
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(orderID)=6
AND orderID <> 'OrderID';

/**How many of those orders were for an iPhone?**/
SELECT COUNT(Product) FROM BIT_DB.JanSales
WHERE JanSales.Product = 'iPhone'
AND length(orderID)=6
AND orderID <> 'OrderID';

/**Select the customer account numbers for all the orders that were placed in February.**/

/**what I initially thought vs what it actually was
SELECT orderID FROM BIT_DB.FebSales
WHERE length(orderID)=6
AND orderID <> 'OrderID';**/

SELECT DISTINCT(customers.acctnum) FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE length(orderID)=6
AND orderID <> 'OrderID';

/**Which product was the cheapest one sold in January, and what was the price?**/

/** What I typed vs the answer I liked most for simplicity
SELECT Jansales.Product
, MIN(Jansales.price)
FROM BIT_DB.JanSales
LIMIT 1;**/

SELECT DISTINCT product
, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

/**Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?**/
SELECT product, quantity, price, location FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';

SELECT
sum(quantity)
, product 
, SUM(quantity)*price as revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101';


/** How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? **/
SELECT COUNT(distinct customers.acctnum)
, ROUND(avg(quantity*febsales.price),2) AS avg_spent
FROM FebSales
JOIN customers
ON FebSales.orderID = customers.order_id
WHERE FebSales.Quantity > 2
AND length(OrderID) = 6
AND order_id <> 'OrderID';


/** what i initially thought vs what I wrote the second time. I added a round fuction w 2 decimal places for $
SELECT customers.acctnum, avg(febsales.price)
FROM FebSales
JOIN customers
ON customers.order_id = febsales.orderID
WHERE febsales.Quantity >= 2
AND length(orderID)=6
AND orderID <> 'OrderID'
GROUP BY customers.acctnum;
